<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--基于接口中的方法,编写SQL映射-->
<mapper namespace="top.haha233.smbms.dal.UserMapper">
    <!--接口中每一个方法，对应着一个映射-->
    <!--映射接口里的add方法,添加用户-->
    <!--insert节点里,编写insert语句-->
    <!--id的属性值不能随意赋值,要和接口里的方法名一致-->
    <!--parameterType:参数的类型 是一个对象-->
    <!--#{属性名} 到参数对象中取对应属性名的值-->
    <insert id="add">
        INSERT INTO smbms_user (userCode, userName, userPassword, gender, birthday, phone, address, userRole, createdBy, creationDate, modifyBy, modifyDate)
        VALUES (#{collection.userName}, #{collection.userPassword}, #{collection.gender},
                                        #{collection.birthday}, #{collection.phone},
                                        #{collection.address}, #{collection.userRole}, 1, now(), 1,
                                        now());
    </insert>

    <update id="modify">
        update smbms_user
        <foreach collection="collection" item="user">
            <set>

            </set>
        </foreach>
        where smbms_user.id = #{collection.id};
    </update>

    <delete id="delete" parameterType="integer">
        DELETE FROM smbms_user
        WHERE id = #{id}
    </delete>

    <resultMap id="userBoResult" type="UserBo" autoMapping="true">
        <association property="userRole" resultMap="roleBoResult" javaType="RoleBo"/>
    </resultMap>
    <resultMap id="roleBoResult" type="RoleBo" autoMapping="true">
        <id property="id" column="r_id"/>
    </resultMap>
    <sql id="selectHead">
        SELECT
            u.id id,
            userCode,
            userName,
            userPassword,
            gender,
            birthday,
            phone,
            address,
            userRole,
            r.id r_id,
            roleCode,
            roleName
        FROM smbms_user u
            LEFT JOIN smbms_role r
                ON u.userRole = r.id
    </sql>
    <sql id="generic-where">
        <where>
            <if test="condition.id != null">
                id = #{condition.id}
            </if>
            <if test="condition.userCode !=null">
                AND userCode = #{condition.userCode}
            </if>
            <if test="condition.userName !=null">
                AND userName like #{condition.userName}"%"
            </if>
            <if test="condition.userPassword !=null">
                AND userPassword = #{condition.userPassword}
            </if>
            <if test="condition.gender !=null">
                AND gender = #{condition.gender}
            </if>
            <if test="condition.birthday !=null">
                AND birthday = #{condition.birthday}
            </if>
            <if test="condition.phone !=null">
                AND phone = #{condition.phone}
            </if>
            <if test="condition.userRole !=null">
                AND userRole = #{condition.userRole}
            </if>
        </where>
    </sql>
    <select id="list" resultMap="userBoResult">
        <include refid="selectHead"/>
        <include refid="generic-where"/>
        LIMIT #{startIndex},#{count};
    </select>
    <select id="count" resultType="int">
        select count(id) from smbms_user
        <include refid="generic-where"/>
    </select>
</mapper>